server:
  forward-headers-strategy: framework
spring:
  data.rest.base-path: api/v1
  datasource:
    url: jdbc:postgresql://localhost:5432/influencers-profiles?ssl=false
    username: user
    password: password
  jpa:
    properties:
      hibernate:
        generate_statistics: true
        cache:
          use_second_level_cache: true
          region.factory_class: org.hibernate.cache.ehcache.EhCacheRegionFactory
          queries: true
          ehcache:
            missing_cache_strategy: create
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
external-hal-links:
  influencers:
    my-campaigns: /api/v1/campaigns/search/by-influencer?{?influencerId,lifecycleStatus,page,size,sort}
    search-public-briefs: /api/v1/briefs/search/by-brand-price?{?brandId,minPrice,maxPrice,isForEveryone,page,size,sort}
management:
  endpoints:
    web:
      exposure:
        include: '*'
springdoc.api-docs.path: /api/v1/profiles/api-doc
logging:
  level:
    com.agenatech: DEBUG


